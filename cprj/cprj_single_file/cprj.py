import os
import sys

if len(sys.argv) != 2:
    print("Usage: cprj <project_name>")
    exit(1)

cwd = os.getcwd()
name = sys.argv[1]

project_dir = cwd + f"/{name}"
script_path = os.path.dirname(os.path.realpath(__file__))

if os.path.exists(project_dir):
    print(f"Directory {name} already exists in the current location", file=sys.stderr)
    exit(2)

# --------- DIRECTORIES --------- #
os.makedirs(project_dir + "/src")
os.makedirs(project_dir + "/include")
os.makedirs(project_dir + "/lib")

# ---------- MAKEFILE ---------- #

makefile = """# Autogenerated makefile
CC := gcc.exe

SRC_DIR := src
INC_DIR := include
OBJ_DIR := obj
LIB_DIR := lib

SRC := $(wildcard $(SRC_DIR)/*.c)
INC := -I$(INC_DIR)
OBJ := $(patsubst $(SRC_DIR)/%.c, $(OBJ_DIR)/%.o, $(SRC))

TARGET := name.exe

all: $(TARGET)

$(OBJ_DIR):
	mkdir -p $(OBJ_DIR)

$(TARGET): $(OBJ)
	$(CC) -o $@ $<

$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c $(OBJ_DIR)
	$(CC) -c $(INC) -o $@ $<

clean:
	rm -rf $(OBJ_DIR)/*.o $(TARGET)

.PHONY: all clean
""".replace("name", name)

with open(project_dir + "/makefile", "w") as f:
    f.write(makefile)

# ----------- MAIN.C ----------- #

main = """/* Autogenerated main.c file */
#include <stdio.h>

int main() {
	printf("Project name\\n");
	return 0;
}
""".replace("name", name)

with open(project_dir + "/src/main.c", "w") as f:
    f.write(main)

print(f"Created project {name}")

